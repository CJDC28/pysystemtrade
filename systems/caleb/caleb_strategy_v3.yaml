#YAML
# start_date: 2000-01-19
use_forecast_weight_estimates: False
use_forecast_div_mult_estimates: False
use_instrument_weight_estimates: False
use_instrument_div_mult_estimates: True
use_forecast_scale_estimates: False

# Set this to 0.13 to enforce the speed limit even for fixed weights or
#   regardless of what an estimator does
forecast_post_ceiling_cost_SR: 0.13

#
# Raw data
#
#
# Trading rules
#
volatility_calculation:
  func: "sysquant.estimators.vol.mixed_vol_calc"
  days: 35
  min_periods: 10
  vol_abs_min: 0.0000000001
  slow_vol_years: 20
  proportion_of_slow_vol: 0.35
  backfill: True
#
use_attenuation:
   - 'breakout10'
   - 'breakout20'
   - 'breakout40'
   - 'breakout80'
   - 'breakout160'
   - 'breakout320'
   - 'relmomentum10'
   - 'relmomentum20'
   - 'relmomentum40'
   - 'relmomentum80'
   - 'mrinasset1000'
   - 'assettrend2'
   - 'assettrend4'
   - 'assettrend8'
   - 'assettrend16'
   - 'assettrend32'
   - 'assettrend64'
   - 'normmom2'
   - 'normmom4'
   - 'normmom8'
   - 'normmom16'
   - 'normmom32'
   - 'normmom64'
   - 'momentum4'
   - 'momentum8'
   - 'momentum16'
   - 'momentum32'
   - 'momentum64'

trading_rules:
  breakout10:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 10
  breakout20:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 20
  breakout40:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 40
  breakout80:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 80
  breakout160:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 160
  breakout320:
     function: systems.provided.rules.breakout.breakout
     data:
         - "rawdata.get_daily_prices"
     other_args:
       lookback: 320
  relmomentum10:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 10
  relmomentum20:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 20
  relmomentum40:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 40
  relmomentum80:
     function: systems.provided.rules.rel_mom.relative_momentum
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 80
  mrinasset1000:
     function: systems.provided.rules.cs_mr.cross_sectional_mean_reversion
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
         - "rawdata.normalised_price_for_asset_class"
     other_args:
       horizon: 1000
  carry10:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 10
  carry30:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 30
  carry60:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 60
  carry125:
     function: systems.provided.rules.carry.carry
     data:
         - "rawdata.raw_carry"
     other_args:
         smooth_days: 125
  assettrend2:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 2
         Lslow: 8
  assettrend4:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 4
         Lslow: 16
  assettrend8:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 8
         Lslow: 32
  assettrend16:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 16
         Lslow: 64
  assettrend32:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 32
         Lslow: 128
  assettrend64:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.normalised_price_for_asset_class"
     other_args:
         Lfast: 64
         Lslow: 256
  normmom2:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 2
         Lslow: 8
  normmom4:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 4
         Lslow: 16
  normmom8:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 8
         Lslow: 32
  normmom16:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 16
         Lslow: 64
  normmom32:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 32
         Lslow: 128
  normmom64:
     function: systems.provided.rules.ewmac.ewmac_calc_vol
     data:
         - "rawdata.get_cumulative_daily_vol_normalised_returns"
     other_args:
         Lfast: 64
         Lslow: 256
  momentum4:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 4
         Lslow: 16
  momentum8:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 8
         Lslow: 32
  momentum16:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 16
         Lslow: 64
  momentum32:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 32
         Lslow: 128
  momentum64:
     function: systems.provided.rules.ewmac.ewmac
     data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
     other_args:
         Lfast: 64
         Lslow: 256
  relcarry:
     function: systems.provided.rules.carry.relative_carry
     data:
          - "rawdata.smoothed_carry"
          - "rawdata.median_carry_for_asset_class"
  skewabs365:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 90
          _factor_name: 'neg_skew'
          _demean_method: 'historic_average_factor_value_all_assets'
          _lookback_days: 365
  skewabs180:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 45
          _factor_name: 'neg_skew'
          _demean_method: 'historic_average_factor_value_all_assets'
          _lookback_days: 180
  skewrv365:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 90
          _factor_name: 'neg_skew'
          _demean_method: 'average_factor_value_in_asset_class_for_instrument'
          _lookback_days: 365
  skewrv180:
     function: systems.provided.rules.factors.factor_trading_rule
     data:
          - 'rawdata.get_demeanded_factor_value'
     other_args:
          smooth: 45
          _factor_name: 'neg_skew'
          _demean_method: 'average_factor_value_in_asset_class_for_instrument'
          _lookback_days: 180
  accel16:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 16
  accel32:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 32
  accel64:
    function: systems.provided.rules.accel.accel
    data:
         - "rawdata.get_daily_prices"
         - "rawdata.daily_returns_volatility"
    other_args:
         Lfast: 64
#
forecast_cap: 20.0
#
forecast_scalars:
  accel16: 7.8170710605387095
  accel32: 5.563487137713779
  accel64: 3.896720541225276
  assettrend16: 3.549452858682833
  assettrend2: 10.846520114531351
  assettrend32: 2.3449234496490723
  assettrend4: 7.572334583056326
  assettrend64: 1.5465144366886119
  assettrend8: 5.190470936448635
  breakout10: 0.6031025130185256
  breakout160: 0.7388310187414805
  breakout20: 0.6742627921625178
  breakout320: 0.7366197028421859
  breakout40: 0.7036929411910525
  breakout80: 0.726260784624834
  carry10: 27.815707053556984
  carry125: 29.366474500729886
  carry30: 28.384062881349813
  carry60: 28.40072429176199
  momentum16: 4.104172020369661
  momentum32: 2.786994330124792
  momentum4: 8.539940954709955
  momentum64: 1.9093945630747895
  momentum8: 5.949404365193165
  mrinasset1000: 653.253194
  normmom16: 4.116536590599602
  normmom2: 12.388305650778637
  normmom32: 2.758872936017786
  normmom4: 8.614429965006694
  normmom64: 1.8706800701120874
  normmom8: 5.979138542342214
  relcarry: 49.44179741391023
  relmomentum10: 61.24026078373817
  relmomentum20: 86.50746400987076
  relmomentum40: 117.77937298659975
  relmomentum80: 159.87802982511536
  skewabs180: 4.590246757939031
  skewabs365: 2.351483885205172
  skewrv180: 5.244752769697409
  skewrv365: 3.002222097593425
#
# forecast combination
#
# Capital correction
#
percentage_vol_target: 25.0
notional_trading_capital: 3000000
base_currency: "USD"
#
# Portfolio creation
#
forecast_weights:
  auto_weight_from_grouping:
    parameters:
      use_approx_DM: False
      apply_forecast_post_ceiling_cost_SR_before_weighting: True
    groups:
      convergent:
        weight: 0.4
        mean_reversion:
          weight: 0.3333
          mrinasset1000: 1.0
        skew:
          weight:  0.3333
          skewabs180: 0.25
          skewabs365: 0.25
          skewrv180: 0.25
          skewrv365: 0.25
        carry:
          weight: 0.3333
          purecarry:
            weight: 0.6
            carry10: 0.25
            carry125: 0.25
            carry30: 0.25
            carry60: 0.25
          relcarry:
            weight: 0.4
            relcarry: 1.0
      divergent:
        weight: 0.6
        speed1:
          weight: 0.1
          relmomentum:
            weight: 0.4
            relmomentum10: 1.0
          trend:
            weight: 0.6
            breakout10: 0.25
            assettrend2: 0.25
            normmom2: 0.25
            momentum4: 0.25
        speed2:
          weight: 0.18
          accel:
            weight: 0.3
            accel16: 1.0
          relmomentum:
            weight: 0.3
            relmomentum20: 1.0
          trend:
            weight: 0.4
            breakout20: 0.25
            assettrend4: 0.25
            normmom4: 0.25
            momentum8: 0.25
        speed3:
          weight: 0.18
          accel:
            weight: 0.3
            accel32: 1.0
          relmomentum:
            weight: 0.3
            relmomentum40: 1.0
          trend:
            weight: 0.4
            breakout40: 0.25
            assettrend8: 0.25
            normmom8: 0.25
            momentum16: 0.25
        speed4:
          weight: 0.18
          accel:
            weight: 0.3
            accel64: 1.0
          relmomentum:
            weight: 0.3
            relmomentum80: 1.0
          trend:
            weight: 0.4
            breakout80: 0.25
            assettrend16: 0.25
            normmom16: 0.25
            momentum32: 0.25
        speed5:
          weight: 0.18
          trend:
            weight: 1.0
            breakout160: 0.25
            assettrend32: 0.25
            normmom32: 0.25
            momentum64: 0.25
        speed6:
          weight: 0.18
          trend:
            weight: 1.0
            normmom64: 0.3333
            assettrend64: 0.3333
            breakout320: 0.3333

forecast_div_multiplier:
  AUD: 2.31107442190053
  BITCOIN: 2.4171575206519025
  BOBL: 2.2475694648423103
  BTP: 2.297073762780803
  BUND: 2.2814992864841135
  BUXL: 2.293916004256619
  CAC: 2.291301057802407
  CAD: 2.321447165324061
  CANOLA: 2.227685040791142
  CHF: 2.3230639987582933
  COCOA: 2.2918869001688735
  COFFEE: 2.283672680078161
  COPPER: 2.304970715421639
  CORN: 2.269189795304198
  COTTON2: 2.230315065147885
  CRUDE_W: 2.2845837804694655
  DAX: 2.361446573523208
  DOW: 2.311088390783247
  EDOLLAR: 2.2222667598661134
  EUR: 2.3277123636398587
  EURIBOR: 1.3350876769007662
  EUROSTX: 2.2768147261964016
  FEEDCOW: 2.2725107504068864
  FTSE100: 2.2970397695745155
  GASOIL: 2.28788926121307
  GASOILINE: 2.2742377990654608
  GAS_US: 2.2958243498386626
  GBP: 2.3216241165195
  GOLD_micro: 2.30401438821583
  HEATOIL: 2.277516460278791
  JPY: 2.3200427711934926
  LEANHOG: 2.2777361261786324
  LIVECOW: 2.2691318821208775
  LUMBER: 2.23599992361015
  MILK: 2.2373771151310455
  MXP: 2.2996409885974094
  NASDAQ: 2.3143384763294947
  NIKKEI: 2.3402308248583763
  NZD: 2.3364564220706696
  OAT: 2.2869581450636307
  OATIES: 2.2359547916979254
  OJ: 2.2234433264455746
  PALLAD: 2.3354315804835273
  PLAT: 2.3150195722928686
  REDWHEAT: 2.291918145713176
  RICE: 2.251178047351205
  ROBUSTA: 2.2730167565236634
  RUSSELL: 2.3410294388106485
  SHATZ: 2.243081835343953
  SILVER-mini: 2.3608809803816384
  SMI: 2.296976343069533
  SOYBEAN: 2.2714213115865856
  SOYMEAL: 2.2937520141749608
  SOYOIL: 2.2894140305993202
  SP400: 2.3535333344847595
  SP500: 2.308173418719485
  SUGAR11: 2.2678767810677667
  US10: 2.207218427982393
  US10U: 2.258398256993804
  US2: 2.244436152896934
  US20: 2.236997013865764
  US30: 2.289261302971877
  US5: 2.2411894746691043
  VIX: 1.8421910782183095
  WHEAT: 2.283281870870036

instrument_weights:
  auto_weight_from_grouping:
    parameters:
      use_approx_DM: True
    groups:
      ags:
        weight: 0.143
        grain:
          weight: 0.33
          corn:
            weight: 0.1667
            CORN: 1.0
          oats:
            weight: 0.1667
            OATIES: 1.0
          rapeseed:
            weight: 0.1667
            CANOLA: 0.5
            RAPESEED: 0.5
          rice:
            weight: 0.1667
            RICE: 1.0
          soy:
            weight: 0.1667
            SOYBEAN: 0.333
            SOYMEAL: 0.333
            SOYOIL: 0.3333
          wheat:
            weight: 0.1667
            REDWHEAT: 0.5
            WHEAT: 0.5
        meats:
          weight: 0.33
          cows:
            weight: 0.5
            FEEDCOW: 0.5
            LIVECOW: 0.5
          pigs:
            weight: 0.5
            LEANHOG: 1.0
        softs:
          weight: 0.33
          cocoa:
            weight: 0.143
            COCOA: 1.0
          coffee:
            weight: 0.143
            COFFEE: 0.5
            ROBUSTA: 0.5
          cotton:
            weight: 0.143
            COTTON2: 1.0
          milk:
            weight: 0.143
            MILK: 1.0
          oj:
            weight: 0.143
            OJ: 1.0
          sugar:
            weight: 0.142
            SUGAR11: 1.0
          wood:
            weight: 0.143
            LUMBER-new: 1.0
      rates:
        weight: 0.143
        Americas:
          weight: 0.5
          govvie:
            weight: 0.5
            US2: 0.143
            US5: 0.143
            US10: 0.143
            US10U: 0.143
            US20: 0.143
            US30: 0.143
          STIR:
            weight: 0.5
            SOFR: 1.0
        EMEA:
          weight: 0.5
          german:
            weight: 0.25
            SHATZ: 0.25
            BOBL: 0.25
            BUND: 0.25
            BUXL: 0.25
          eu:
            weight: 0.25
            EURIBOR-ICE: 1.0
          france:
            weight: 0.25
            OAT: 1.0
          italy:
            weight: 0.25
            BTP: 1.0
      equity:
        weight: 0.143
        Americas:
          weight: 0.333
          largecap:
            weight: 0.5
            DOW: 0.333
            SP500: 0.333
            NASDAQ: 0.333
          midcap:
            weight: 0.5
            RUSSELL: 0.5
            SP400: 0.5
        Asia:
          weight: 0.333
          NIKKEI: 1.0
        EMEA:
          weight: 0.333
          swiss:
            weight: 0.2
            SMI: 1.0
          german:
            weight: 0.2
            DAX: 1.0
          eu:
            weight: 0.2
            EUROSTX: 1.0
          france:
            weight: 0.2
            CAC: 1.0
          uk:
            weight: 0.2
            FTSE100: 1.0
      fx:
        weight: 0.143
        developed:
          weight: 0.5
          AUD: 0.143
          CAD: 0.143
          CHF: 0.143
          EUR: 0.143
          GBP: 0.143
          JPY: 0.143
          NZD: 0.143
        em:
          weight: 0.5
          MXP: 1.0
      metals:
        weight: 0.143
        crypto:
          weight: 0.333
          BITCOIN: 1.0
        industrial:
          weight: 0.333
          COPPER: 1.0
        precious:
          weight: 0.333
          GOLD_micro: 0.25
          PALLAD: 0.25
          PLAT: 0.25
          SILVER-mini: 0.25
      energies:
        weight: 0.143
        gas:
          weight: 0.333
          GAS_US: 1.0
        oil:
          weight: 0.333
          CRUDE_W: 1.0
        products:
          weight: 0.333
          GASOIL: 0.333
          GASOILINE: 0.333
          HEATOIL: 0.333
      vol:
        weight: 0.143
        VIX: 1.0

instrument_div_multiplier: 2.5
#
#risk_overlay:
#  max_risk_fraction_normal_risk: 1.4
#  max_risk_fraction_stdev_risk: 3.6
#  max_risk_limit_sum_abs_risk: 3.4
#  max_risk_leverage: 13.0

#
# duplicated/excluded instruments are ignored in backtests
# we still collect price data for them in production, do rolls etc
# this is to avoid double counting of basically the same instrument
# anything in the 'exclude' list is ignored in backtests
# we use the 'include section to match up for reporting when deciding which to trade
# Be careful when swapping between instruments, a bit dangerous if a position is held...
# You can override this by modifying the backtest config .yaml file used in either sim or production
#
# THe following example shows how you would select one instrument out of a choice of 3
#
duplicate_instruments:
  include:
    copper: 'COPPER'
    corn: 'CORN'
    crude: 'CRUDE_W'
    gas_us: 'GAS_US'
    gasoiline: 'GASOILINE'
    gold: 'GOLD_micro'
    heatoil: 'HEATOIL'
    jpy: 'JPY'
    nasdaq: 'NASDAQ'
    nikkei: 'NIKKEI'
    silver: 'SILVER-mini'
    soybean: 'SOYBEAN'
    sp500: 'SP500'
    vix: 'VIX'
    wheat: 'WHEAT'
  exclude:
    copper: 'COPPER-mini'
    corn: 'CORN_mini'
    crude: 'CRUDE_W_mini'
    gas_us: 'GAS_US_mini'
    gasoiline: 'GASOILINE_mini'
    gold: 'GOLD'
    heatoil: 'HEATOIL_mini'
    jpy: ['JPY_micro','JPY-SGX-TITAN', 'JPY-SGX']
    nasdaq: 'NASDAQ_micro'
    nikkei: 'NIKKEI-JPY'
    silver: 'SILVER'
    soybean: 'SOYBEAN_mini'
    sp500: 'SP500_micro'
    vix: 'VIX_mini'
    wheat: 'WHEAT_mini'

exclude_instrument_lists:
  # ignore_instruments are ignored in backtests
  # we still collect price data for them in production, do rolls etc
  # You can override this by modifying the backtest config .yaml file used in either sim or production
  # If you want to ignore because a duplicate market, use duplicate_instruments
  # If you want to include in sim data, but not actually trade, use trading_restrictions
  #
  # BEST FOR INSTRUMENTS THAT LOOK EXPENSIVE, BUT WHERE WE HAVEN'T GOT ACCURATE DATA YET
  #
  # REVIEW REGULARLY AND CHECK THESE INSTRUMENTS AREN'T BETTER ELSEWHERE...
  ignore_instruments:
    - ETHANOL

  #
  # Here we put stuff we can't trade, but for which we still want to bring in prices in sim
  # For the dynamically optimised strategy this list will be used in sim as 'don't trade'
  # For static strategies, you will probably want to set these to zero instrument weights
  # In production, things here will be added to the 'reduce_only' list of instruments
  # NOTE: This will be regionally biased, you will probably want to override this in private_config.yaml
  #
  trading_restrictions:
    - NIKKEI
    - FTSE100

  # These are markets that are too expensive or illiquid to actually trade
  # For the dynamically optimised strategy this list will be used in sim as 'don't trade'
  # For static strategies, you will probably want to set these to zero instrument weights
  # In production, things here will be added to the 'reduce_only' list of instruments
  # Run interactive controls to get a list of suggested markets here
  # To override this list, change in sim .yaml config (sim) and private_config.yaml (production)
  bad_markets:
    - EDOLLAR
    - EURIBOR
    - LUMBER
    - OATIES
    - SHATZ
    - US2
    - NIKKEI
    - LUMBER-new
    - SOFR
